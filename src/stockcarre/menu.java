/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stockcarre;

import java.awt.HeadlessException;
import static java.lang.Integer.parseInt;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rango
 */
public class menu extends javax.swing.JFrame {
    
    conect conn = new conect();
    Statement stm,stm1;
    ResultSet Rs;
    int selected_index_table = 0;
    
    public String selected_menu;
    
    public int indice = MenuPrincipal.tables.indic;
    
    DefaultTableModel model_menu = new DefaultTableModel();
    DefaultTableModel model_commande = new DefaultTableModel();
    
    DefaultListModel model_ingredient = new DefaultListModel();
    DefaultComboBoxModel model_ComTable = new DefaultComboBoxModel();
    DefaultComboBoxModel model_ComTable2 = new DefaultComboBoxModel();
    int num;

    public menu() {
        initComponents();

        afficher_menu();
        btnMenuAjoutCommande.setEnabled(false);
        
        //ADDITION N°
         try {
                model_menu.setRowCount(0);
                stm = conn.obtenirconnexion().createStatement();
                ResultSet fr = stm.executeQuery("Select max(addition) from commande");
                fr.next();
                num = fr.getInt("max(addition)") + 1 ;
                jTextField2.setText(num+"");
            } catch (SQLException e) {System.err.println(e);}
        
        
        //-------------------------------------------
        
        
        
        


//COMBOBOX TABLE---------------------------------
        try{
                model_ComTable.removeAllElements();               
                model_ComTable.addElement("-- Choisir une table --");
                stm = conn.obtenirconnexion().createStatement();
                ResultSet fr = stm.executeQuery("Select designation_table from table1");

                while (fr.next()){
                    model_ComTable.addElement(fr.getString("designation_table"));
                    
                }
                comTableMenu.setModel(model_ComTable);
 
            }catch (HeadlessException | SQLException ex) {
            }
 
       //---------------------------------------------------
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_menu = new javax.swing.JTable();
        comMenuCategori = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnSupprMenu = new javax.swing.JButton();
        btnAjoutMenu = new javax.swing.JButton();
        btnModifMenu = new javax.swing.JButton();
        btnMenuAjoutCommande = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        nbr_commande = new javax.swing.JTextField();
        comTableMenu = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_commande = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btn_menuPrincial = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(863, 521));
        setMinimumSize(new java.awt.Dimension(863, 521));
        setPreferredSize(new java.awt.Dimension(863, 521));
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        tbl_menu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "#", "Carte & menus", "P.U (Ar)"
            }
        ));
        tbl_menu.setRowHeight(25);
        tbl_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_menuMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_menu);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 113, 363, 330);

        comMenuCategori.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "           --   Catégorie   --", "Tous", "Boissons chaudes", "Boissons fraiches", "Bières", "Vins - Apéritifs", "Whiskys - Alcools", "Liqueurs - Digestifs", "Champagne", "Cocktails", "Salades", "Entréés", "Tartares", "Woks", "Poissons", "Humbergers", "Pates", "Soupes", "Viandes" }));
        comMenuCategori.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comMenuCategoriItemStateChanged(evt);
            }
        });
        getContentPane().add(comMenuCategori);
        comMenuCategori.setBounds(10, 72, 178, 35);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(194, 72, 179, 35);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Plantagenet Cherokee", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Menus");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 10, 80, 40);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stockcarre/t.png"))); // NOI18N
        jPanel1.add(jLabel10);
        jLabel10.setBounds(-110, 10, 250, 40);

        btnSupprMenu.setText("Supprimer");
        btnSupprMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprMenuActionPerformed(evt);
            }
        });
        jPanel1.add(btnSupprMenu);
        btnSupprMenu.setBounds(260, 450, 110, 23);

        btnAjoutMenu.setText("Ajouter");
        btnAjoutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjoutMenuActionPerformed(evt);
            }
        });
        jPanel1.add(btnAjoutMenu);
        btnAjoutMenu.setBounds(10, 450, 120, 23);

        btnModifMenu.setText("Modifier");
        btnModifMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifMenuActionPerformed(evt);
            }
        });
        jPanel1.add(btnModifMenu);
        btnModifMenu.setBounds(140, 450, 110, 23);

        btnMenuAjoutCommande.setText("Ajouter à la commande   >>");
        btnMenuAjoutCommande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuAjoutCommandeActionPerformed(evt);
            }
        });
        jPanel1.add(btnMenuAjoutCommande);
        btnMenuAjoutCommande.setBounds(380, 340, 180, 37);

        jLabel3.setText("Quantité:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(380, 240, 100, 30);

        nbr_commande.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nbr_commande.setText("1");
        jPanel1.add(nbr_commande);
        nbr_commande.setBounds(490, 240, 70, 30);

        comTableMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Table" }));
        comTableMenu.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comTableMenuItemStateChanged(evt);
            }
        });
        comTableMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comTableMenuActionPerformed(evt);
            }
        });
        jPanel1.add(comTableMenu);
        comTableMenu.setBounds(380, 190, 180, 37);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Addition N°:");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(380, 120, 70, 30);

        jTextField2.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 255, 255));
        jTextField2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jTextField2.setText("jLabel5");
        jPanel1.add(jTextField2);
        jTextField2.setBounds(460, 120, 80, 30);

        tbl_commande.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Designation", "Quantité"
            }
        ));
        jScrollPane1.setViewportView(tbl_commande);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(570, 110, 280, 330);

        jButton1.setText("Annuler");
        jPanel1.add(jButton1);
        jButton1.setBounds(570, 450, 110, 23);

        btn_menuPrincial.setBackground(java.awt.Color.black);
        btn_menuPrincial.setForeground(new java.awt.Color(255, 255, 255));
        btn_menuPrincial.setText("Menus principal");
        btn_menuPrincial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_menuPrincialActionPerformed(evt);
            }
        });
        jPanel1.add(btn_menuPrincial);
        btn_menuPrincial.setBounds(720, 0, 140, 40);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 870, 510);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
private void afficher_menu() {
        model_menu.setColumnCount(0);
        model_menu.addColumn("#");
        model_menu.addColumn("Designation");
        model_menu.addColumn("Catégorie");
        model_menu.addColumn("PU (Ar)");
        
        btnModifMenu.setEnabled(false);
        btnSupprMenu.setEnabled(false);
        btnMenuAjoutCommande.setEnabled(false);

    
        try {
                model_menu.setRowCount(0);
                stm = conn.obtenirconnexion().createStatement();
                ResultSet fr = stm.executeQuery("Select * from menu order by designation");
                    while (fr.next())   {
                        model_menu.addRow(new Object[]{fr.getString("id"),fr.getString("designation"),
                            fr.getString("categorie"), fr.getString("pu")});
                                        }
            } catch (SQLException e) {System.err.println(e);}
        
        tbl_menu.setModel(model_menu);

}


 private void afficher_commande() {
        model_commande.setColumnCount(0);
        
        model_commande.addColumn("Designation");
        model_commande.addColumn("Qté");


    if(comTableMenu.getSelectedItem().toString().equals("-- Choisir une table --")){
        tbl_commande.removeAll();
    }else{
        try {
                model_commande.setRowCount(0);
                stm = conn.obtenirconnexion().createStatement();
                ResultSet fr = stm.executeQuery("Select * from commande where des_table = '"+comTableMenu.getSelectedItem().toString()+"'"
                        + "&& etat ='En attente' ");
                    while (fr.next())   {
                        model_commande.addRow(new Object[]{fr.getString("des_menu"),fr.getString("nbr_commande")});
                                        }
            } catch (SQLException e) {System.err.println(e);}

        tbl_commande.setModel(model_commande);
    
       

    }}


//private void afficher_ingredient() {
//
//        supprIngr.setEnabled(false);
//        int i = tbl_menu.getSelectedRow();
//        String val = tbl_menu.getValueAt(i, 0).toString();
//        
//    
//        try {
//                model_ingredient.removeAllElements();
//                listEngredient.removeAll();
//                stm = conn.obtenirconnexion().createStatement();
//                ResultSet fr = stm.executeQuery("Select des_produit from ingredient where id_menu = '"+val+"' order by des_produit");
//                    while (fr.next())   {
//                        model_ingredient.addElement(fr.getString("des_produit"));
//                                        }
//            } catch (SQLException e) {System.err.println(e);}
//        
//        listEngredient.setModel(model_ingredient);
//
//}




    
    
    
    
    
    private void btnSupprMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprMenuActionPerformed
        int i = tbl_menu.getSelectedRow();
        String id = tbl_menu.getValueAt(i, 0).toString();
        
            try {
                if (JOptionPane.showConfirmDialog(null, "voulez-vous vraiment supprimer: "+id+" ?" , "supprimer le menu",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.OK_OPTION) {
                if (id.length() != 0) {
                    
                    stm.executeUpdate("Delete From menu where id = '" + id+"'");
                    stm.executeUpdate("Delete From ingredient where id_menu = '" + id+"'");
                    
                    JOptionPane.showMessageDialog(null, "\""+id +"\" supprimé de la liste!");
                   
                } else {
                    JOptionPane.showMessageDialog(null, "Veuillez remplire le champ Numero");
                }
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, "erreur de suppression \n" + e.getMessage());
        }
        
        
        
    }//GEN-LAST:event_btnSupprMenuActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
//designation like '%"+jTextField1.getText()+"%'
        if (comMenuCategori.getSelectedItem().equals("Tous")){
    
     model_menu.setColumnCount(0);
        model_menu.addColumn("#");
        model_menu.addColumn("Designation");
        model_menu.addColumn("Catégorie");
        model_menu.addColumn("PU (Ar)");
        
        btnModifMenu.setEnabled(false);
        btnSupprMenu.setEnabled(false);
        btnMenuAjoutCommande.setEnabled(false);

    
        try {
                model_menu.setRowCount(0);
                stm = conn.obtenirconnexion().createStatement();
                ResultSet fr = stm.executeQuery("Select * from menu where designation like '%"+jTextField1.getText()+"%' order by designation");
                    while (fr.next())   {
                        model_menu.addRow(new Object[]{fr.getString("id"),fr.getString("designation"),
                            fr.getString("categorie"), fr.getString("pu")});
                                        }
            } catch (SQLException e) {System.err.println(e);}
        
        tbl_menu.setModel(model_menu);
    
}   else{     
        model_menu.setColumnCount(0);
        model_menu.addColumn("#");
        model_menu.addColumn("Designation");
        model_menu.addColumn("Catégorie");
        model_menu.addColumn("PU (Ar)");
        
        btnModifMenu.setEnabled(false);
        btnSupprMenu.setEnabled(false);
        btnMenuAjoutCommande.setEnabled(false);
    
        try {
                model_menu.setRowCount(0);
                stm = conn.obtenirconnexion().createStatement();
                ResultSet fr = stm.executeQuery("Select * from menu where categorie ='"+comMenuCategori.getSelectedItem().toString()+"' && designation like '%"+jTextField1.getText()+"%' order by designation");
                    while (fr.next())   {
                        model_menu.addRow(new Object[]{fr.getString("id"),fr.getString("designation"),
                            fr.getString("categorie"), fr.getString("pu")});
                                        }
            } catch (SQLException e) {System.err.println(e);}
        
        tbl_menu.setModel(model_menu);
        
        
}
        
        
        
        
        
    }//GEN-LAST:event_jTextField1KeyTyped

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        login.menuPrincipal.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_formWindowClosing

    private void tbl_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_menuMouseClicked
        int val = tbl_menu.getSelectedRow();
        if(comTableMenu.getSelectedItem().equals("-- Choisir une table --")){
          btnMenuAjoutCommande.setEnabled(false);  
        }else{
          btnMenuAjoutCommande.setEnabled(true);  
        }
        
        
        
        
        if(val == -1){
            
            
            
            
            
           String val1 = comTableMenu.getSelectedItem().toString();

        if(val1.equals("-- Choisir une table --")){
            
            btnMenuAjoutCommande.setEnabled(false);
            
        }else{
            try {
                if(tbl_menu.getSelectedRow() == -1){
                    btnMenuAjoutCommande.setEnabled(false);
                }else{
                
                btnMenuAjoutCommande.setEnabled(true);
                stm = conn.obtenirconnexion().createStatement();
                ResultSet fr = stm.executeQuery("Select addition from commande where des_table = '"+val1+"' && etat = 'En attente'");
                
                if(fr.next()){
                    jTextField2.setText(fr.getString("addition"));
                }else{
                    
         
        //ADDITION N°
         try {
                stm = conn.obtenirconnexion().createStatement();
                ResultSet fr2 = stm.executeQuery("Select max(addition) from commande");
                fr2.next();
                num = fr2.getInt("max(addition)") + 1 ;
                jTextField2.setText(num+"");
            } catch (SQLException e) {System.err.println(e);}
        
        
        //-------------------------------------------
         
                }
                
            }} catch (SQLException e) {System.err.println(e);}
            
            afficher_commande();
        } 
            
            
            
            
            
            
        }else{
        selected_menu = tbl_menu.getValueAt(val, 0).toString();
        
        btnModifMenu.setEnabled(true);
        btnSupprMenu.setEnabled(true);
        
        if(comTableMenu.getSelectedItem().equals("-- Choisir une table --")){
            
        }else{
        btnMenuAjoutCommande.setEnabled(true);
        }
       
        }
    }//GEN-LAST:event_tbl_menuMouseClicked

    private void btnAjoutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjoutMenuActionPerformed
        menuAdd m = new menuAdd();
        m.setVisible(true);
        
        
        
    }//GEN-LAST:event_btnAjoutMenuActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        afficher_menu();
        model_ingredient.removeAllElements();
        btnMenuAjoutCommande.setEnabled(false);
        
        
//        try{
//                model_ComTable2.removeAllElements();               
//                model_ComTable2.addElement("-- Choisir une table --");
//                stm = conn.obtenirconnexion().createStatement();
//                ResultSet fr = stm.executeQuery("Select designation_table from table1");
//
//                while (fr.next()){
//                    model_ComTable2.addElement(fr.getString("designation_table"));
//                    
//                }
//                comTableMenu.setModel(model_ComTable2);
// 
//            }catch (HeadlessException | SQLException ex) {
//            }
        
        
        
        if(indice == 1){
        comTableMenu.setSelectedIndex(0);
        }else{
        comTableMenu.setSelectedIndex(selected_index_table);
        }
        
        afficher_commande();
    }//GEN-LAST:event_formWindowGainedFocus

    private void btnModifMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifMenuActionPerformed
        menuModif a = new menuModif();
        a.setVisible(true);
        
        
        
    }//GEN-LAST:event_btnModifMenuActionPerformed

    private void comMenuCategoriItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comMenuCategoriItemStateChanged
if (comMenuCategori.getSelectedItem().equals("Tous")){
    
    afficher_menu();
    
}   else{     
        model_menu.setColumnCount(0);
        model_menu.addColumn("#");
        model_menu.addColumn("Designation");
        model_menu.addColumn("Catégorie");
        model_menu.addColumn("PU (Ar)");
        
        btnModifMenu.setEnabled(false);
        btnSupprMenu.setEnabled(false);
        btnMenuAjoutCommande.setEnabled(false);
    
        try {
                model_menu.setRowCount(0);
                stm = conn.obtenirconnexion().createStatement();
                ResultSet fr = stm.executeQuery("Select * from menu where categorie ='"+comMenuCategori.getSelectedItem().toString()+"' order by designation");
                    while (fr.next())   {
                        model_menu.addRow(new Object[]{fr.getString("id"),fr.getString("designation"),
                            fr.getString("categorie"), fr.getString("pu")});
                                        }
            } catch (SQLException e) {System.err.println(e);}
        
        tbl_menu.setModel(model_menu);
        
        
}
    }//GEN-LAST:event_comMenuCategoriItemStateChanged

    private void btnMenuAjoutCommandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuAjoutCommandeActionPerformed
        selected_index_table = comTableMenu.getSelectedIndex();
        
        int val = tbl_menu.getSelectedRow();
        String add = jTextField2.getText();
        String id_menu = tbl_menu.getValueAt(val, 0).toString();
        String des_menu = tbl_menu.getValueAt(val, 1).toString();
        String pu = tbl_menu.getValueAt(val, 3).toString();
        String des_table = comTableMenu.getSelectedItem().toString();
        int pu1 = parseInt(pu);
        int montant;
        int qte;
        
                if (nbr_commande.getText().length() == 0){
                    montant = pu1;
                    qte = 1;
                }else{
                    montant = pu1 * parseInt(nbr_commande.getText());
                    qte = parseInt(nbr_commande.getText());
                }
        String date = null;
        try {
            ResultSet fr = stm.executeQuery("Select now()");
            fr.next();
            date = fr.getString(1);
        } catch (SQLException e) {
            System.err.println(e);
        }
                
                
                
                
        
        
        
        
        try{
                stm = conn.obtenirconnexion().createStatement();
                ResultSet fr = stm.executeQuery("Select addition,des_menu,des_table from commande where des_menu='"+des_menu+"' && "
                        + "des_table = '"+des_table+"' && addition = '"+add+"'");

                if (fr.next()) {

                    try {
                
                stm.executeUpdate("UPDATE commande SET nbr_commande = nbr_commande +'" +qte+ "', montant = prix_unitaire * nbr_commande "
                        + "WHERE des_table ='" + des_table+"'&& des_menu='"+des_menu+"'&& addition = '"+add+"' ");
                JOptionPane.showMessageDialog(null, "Succès!");
                        
                    } catch (HeadlessException e) {
                        JOptionPane.showMessageDialog(null, "erreur de modification !" + e.getMessage());
                        System.err.println(e);
                    }

                }else {
                    
                    try {
                        
                     
                    stm = conn.obtenirconnexion().createStatement();
                    String requete = "insert into commande(addition,des_table,des_menu,nbr_commande,"
                            + "prix_unitaire,montant,etat,date_payement,id_menu)VALUES('" + add + "','" 
                + des_table + "','" + des_menu + "','" + qte + "','" + pu + "','"+montant+"','En attente','"+date+"','"+id_menu+"')";
                    stm.executeUpdate(requete);
                    JOptionPane.showMessageDialog(null, "Ajoutée");

                } catch (HeadlessException | SQLException ex)   {
                    
                }}

            
        }catch (HeadlessException | SQLException ex) {
        }
        
        comTableMenu.setSelectedIndex(selected_index_table);
        afficher_commande();
        comTableMenu.setSelectedIndex(selected_index_table);

    }//GEN-LAST:event_btnMenuAjoutCommandeActionPerformed

    private void comTableMenuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comTableMenuItemStateChanged
      String val = comTableMenu.getSelectedItem().toString();
      
        if(val.equals("-- Choisir une table --")){
            
            btnMenuAjoutCommande.setEnabled(false);
            
        }else{
            if(tbl_menu.getSelectedRow() == -1){
                btnMenuAjoutCommande.setEnabled(false);
            }else{
                btnMenuAjoutCommande.setEnabled(true);
            }
            
            
            try {
                
                stm = conn.obtenirconnexion().createStatement();
                ResultSet fr = stm.executeQuery("Select addition from commande where des_table = '"+val+"' && etat = 'En attente'");
                
                if(fr.next()){
                    jTextField2.setText(fr.getString("addition"));
                }else{
                    
         
        //ADDITION N°
         try {
                stm = conn.obtenirconnexion().createStatement();
                ResultSet fr2 = stm.executeQuery("Select max(addition) from commande");
                fr2.next();
                num = fr2.getInt("max(addition)") + 1 ;
                jTextField2.setText(num+"");
            } catch (SQLException e) {System.err.println(e);}
        
        
        //-------------------------------------------
         
                }
                
            } catch (SQLException e) {System.err.println(e);}
            
            afficher_commande();
        }
        
        
        
    }//GEN-LAST:event_comTableMenuItemStateChanged

    private void comTableMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comTableMenuActionPerformed

    }//GEN-LAST:event_comTableMenuActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
         comTableMenu.setSelectedIndex(0);
         selected_index_table = comTableMenu.getSelectedIndex();
         
        model_commande.setColumnCount(0);
        
        model_commande.addColumn("Designation");
        model_commande.addColumn("Qté");
        
        model_commande.setRowCount(0);
        
        tbl_commande.setModel(model_commande);
    }//GEN-LAST:event_formWindowClosed

    private void btn_menuPrincialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_menuPrincialActionPerformed
        login.menuPrincipal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_menuPrincialActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjoutMenu;
    private javax.swing.JButton btnMenuAjoutCommande;
    private javax.swing.JButton btnModifMenu;
    private javax.swing.JButton btnSupprMenu;
    private javax.swing.JButton btn_menuPrincial;
    private javax.swing.JComboBox comMenuCategori;
    private javax.swing.JComboBox comTableMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jTextField2;
    private javax.swing.JTextField nbr_commande;
    private javax.swing.JTable tbl_commande;
    private javax.swing.JTable tbl_menu;
    // End of variables declaration//GEN-END:variables
}
